{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/spotifytest/client/src/components/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport useAuth from '../hooks/useAuth';\nimport Player from './Player';\nimport TrackSearchResult from './TrackSearchResult';\nimport { Container, Form } from 'react-bootstrap';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  clientId: process.env.CLIENT_ID\n});\nexport default function Dashboard({\n  code\n}) {\n  _s();\n\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState('');\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch('');\n    setLyrics('');\n  }\n\n  useEffect(() => {\n    if (!playingTrack) return;\n    axios.get('http://localhost:3001/lyrics', {\n      params: {\n        track: playingTrack.title,\n        artist: playingTrack.artist\n      }\n    }).then(res => {\n      setLyrics(res.data.lyrics);\n    });\n  }, [playingTrack]);\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n    spotifyApi.searchTracks(search).then(res => {\n      if (cancel) return;\n      setSearchResults(res.body.tracks.items.map(track => {\n        const smallestAlbumImage = track.album.images.reduce((smallest, image) => {\n          if (image.height < smallest.height) return image;\n          return smallest;\n        }, track.album.images[0]);\n        return {\n          artist: track.artists[0].name,\n          title: track.name,\n          uri: track.uri,\n          albumUrl: smallestAlbumImage.url\n        };\n      }));\n    });\n    return () => cancel = true;\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex text-center align-items-center py-4 justify-content-center\",\n      style: {\n        height: '75px',\n        maxWidth: '1400px',\n        width: '100%',\n        background: 'green',\n        color: 'white'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Musicified\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Music app\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Songs/Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: 'auto'\n      },\n      children: [searchResults.map(track => /*#__PURE__*/_jsxDEV(TrackSearchResult, {\n        track: track,\n        chooseTrack: chooseTrack\n      }, track.uri, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)), searchResults.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        style: {\n          whiteSpace: 'pre'\n        },\n        children: lyrics\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Player, {\n        accessToken: accessToken,\n        trackUri: playingTrack === null || playingTrack === void 0 ? void 0 : playingTrack.uri\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"mvwrkyCORFoEiiJp8gBg3aA7BKk=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/Users/admin/Desktop/spotifytest/client/src/components/Dashboard.js"],"names":["useState","useEffect","useAuth","Player","TrackSearchResult","Container","Form","SpotifyWebApi","axios","spotifyApi","clientId","process","env","CLIENT_ID","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","playingTrack","setPlayingTrack","lyrics","setLyrics","chooseTrack","track","get","params","title","artist","then","res","data","setAccessToken","cancel","searchTracks","body","tracks","items","map","smallestAlbumImage","album","images","reduce","smallest","image","height","artists","name","uri","albumUrl","url","maxWidth","width","background","color","e","target","value","overflowY","length","whiteSpace"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport useAuth from '../hooks/useAuth';\nimport Player from './Player';\nimport TrackSearchResult from './TrackSearchResult';\nimport { Container, Form } from 'react-bootstrap';\nimport SpotifyWebApi from 'spotify-web-api-node';\nimport axios from 'axios';\n\nconst spotifyApi = new SpotifyWebApi({\n  clientId: process.env.CLIENT_ID,\n});\n\nexport default function Dashboard({ code }) {\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [playingTrack, setPlayingTrack] = useState();\n  const [lyrics, setLyrics] = useState('');\n\n  function chooseTrack(track) {\n    setPlayingTrack(track);\n    setSearch('');\n    setLyrics('');\n  }\n\n  useEffect(() => {\n    if (!playingTrack) return;\n\n    axios\n      .get('http://localhost:3001/lyrics', {\n        params: {\n          track: playingTrack.title,\n          artist: playingTrack.artist,\n        },\n      })\n      .then((res) => {\n        setLyrics(res.data.lyrics);\n      });\n  }, [playingTrack]);\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n\n    let cancel = false;\n    spotifyApi.searchTracks(search).then((res) => {\n      if (cancel) return;\n      setSearchResults(\n        res.body.tracks.items.map((track) => {\n          const smallestAlbumImage = track.album.images.reduce(\n            (smallest, image) => {\n              if (image.height < smallest.height) return image;\n              return smallest;\n            },\n            track.album.images[0]\n          );\n\n          return {\n            artist: track.artists[0].name,\n            title: track.name,\n            uri: track.uri,\n            albumUrl: smallestAlbumImage.url,\n          };\n        })\n      );\n    });\n\n    return () => (cancel = true);\n  }, [search, accessToken]);\n\n  return (\n    <Container\n      className='d-flex flex-column py-2'\n      style={{\n        height: '100vh',\n      }}>\n      <div\n        className='d-flex text-center align-items-center py-4 justify-content-center'\n        style={{\n          height: '75px',\n          maxWidth: '1400px',\n          width: '100%',\n          background: 'green',\n          color: 'white',\n        }}>\n        <h2>\n          Musicified\n          <br /> <h6>Music app</h6>\n        </h2>\n      </div>\n      <Form.Control\n        type='search'\n        placeholder='Search Songs/Artists'\n        value={search}\n        onChange={(e) => setSearch(e.target.value)}\n      />\n      <div className='flex-grow-1 my-2' style={{ overflowY: 'auto' }}>\n        {searchResults.map((track) => (\n          <TrackSearchResult\n            track={track}\n            key={track.uri}\n            chooseTrack={chooseTrack}\n          />\n        ))}\n        {searchResults.length === 0 && (\n          <div className='text-center' style={{ whiteSpace: 'pre' }}>\n            {lyrics}\n          </div>\n        )}\n      </div>\n      <div>\n        <Player accessToken={accessToken} trackUri={playingTrack?.uri} />\n      </div>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}